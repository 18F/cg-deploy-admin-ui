---
jobs:
- name: deploy-admin-ui-staging
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: admin-ui-config-staging
      trigger: true
    - get: admin-ui-release
      trigger: true
    - get: common-stage
    - get: admin-ui-stemcell
  - task: admin-ui-manifest
    file: pipeline-tasks/spiff-merge.yml
    config:
      inputs:
        - name: pipeline-tasks
        - name: admin-ui-config-staging
        - name: common-stage
      params:
        OUTPUT_FILE: spiff-merge/manifest-staging.yml
        SOURCE_FILE: admin-ui-config-staging/admin-ui-deployment.yml
        MERGE_FILES: common-stage/secrets.yml
  - put: admin-ui-staging-deployment
    params:
      cert: common-stage/boshCA.crt
      manifest: spiff-merge/manifest-staging.yml
      releases:
        - admin-ui-release/*.tgz
      stemcells:
        - admin-ui-stemcell/*.tgz
  - task: admin-ui-errand
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_TARGET: {{admin-ui-deployment-bosh-target}}
      BOSH_USERNAME: {{admin-ui-deployment-bosh-username}}
      BOSH_PASSWORD: {{admin-ui-deployment-bosh-password}}
      BOSH_DEPLOYMENT_NAME: {{admin-ui-deployment-bosh-deployment}}
      BOSH_ERRAND: register_admin_ui
      BOSH_CACERT: common/boshCA.crt
    on_failure:
      put: slack
      params:
        text: |
          :x: FAILED to deploy admin-ui on staging
          <$ATC_EXTERNAL_URL/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}
    on_success:
      put: slack
      params:
        text: |
          :white_check_mark: Successfully deployed admin-ui on staging
          <$ATC_EXTERNAL_URL/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}

- name: deploy-admin-ui-production
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: admin-ui-config-production
      trigger: true
    - get: admin-ui-release
      trigger: false
      passed: [deploy-admin-ui-staging]
    - get: common-prod
    - get: admin-ui-stemcell
  - task: admin-ui-manifest
    file: pipeline-tasks/spiff-merge.yml
    config:
      inputs:
        - name: pipeline-tasks
        - name: admin-ui-config-production
        - name: common-prod
      params:
        OUTPUT_FILE: spiff-merge/manifest.yml
        SOURCE_FILE: admin-ui-config-production/admin-ui-deployment.yml
        MERGE_FILES: common-prod/secrets.yml
  - put: admin-ui-production-deployment
    params:
      cert: common-prod/boshCA.crt
      manifest: spiff-merge/manifest.yml
      releases:
        - admin-ui-release/*.tgz
      stemcells:
        - admin-ui-stemcell/*.tgz
  - task: admin-ui-errand
    file: pipeline-tasks/bosh-errand.yml
    params:
      BOSH_TARGET: {{admin-ui-deployment-bosh-target}}
      BOSH_USERNAME: {{admin-ui-deployment-bosh-username}}
      BOSH_PASSWORD: {{admin-ui-deployment-bosh-password}}
      BOSH_DEPLOYMENT_NAME: {{admin-ui-deployment-bosh-deployment}}
      BOSH_ERRAND: register_admin_ui
      BOSH_CACERT: common/boshCA.crt
    on_failure:
      put: slack
      params:
        text: |
          :x: FAILED to deploy admin-ui on production
          <$ATC_EXTERNAL_URL/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}
    on_success:
      put: slack
      params:
        text: |
          :white_check_mark: Successfully deployed admin-ui on production
          <$ATC_EXTERNAL_URL/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}


resources:
- name: common-stage
  type: cg-common
  source:
    bucket_name: {{admin-ui-private-bucket-staging}}
    access_key_id: {{admin-ui-private-access-key-id-staging}}
    secret_access_key: {{admin-ui-private-secret-access-key-staging}}
    secrets_file: admin-ui.yml
    secrets_passphrase: {{admin-ui-staging-private-passphrase}}
    bosh_cert: bosh.pem
    region: {{aws-region}}

- name: common-prod
  type: cg-common
  source:
    bucket_name: {{admin-ui-private-bucket-production}}
    access_key_id: {{admin-ui-private-access-key-id-production}}
    secret_access_key: {{admin-ui-private-secret-access-key-production}}
    secrets_file: admin-ui.yml
    secrets_passphrase: {{admin-ui-production-private-passphrase}}
    bosh_cert: bosh.pem
    region: {{aws-region}}

- name: admin-ui-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-community/admin-ui-boshrelease

- name: admin-ui-config-staging
  type: git
  source:
    uri: {{cg-deploy-admin-ui-git-url}}
    branch: {{cg-deploy-admin-ui-git-branch-staging}}

- name: admin-ui-config-production
  type: git
  source:
    uri: {{cg-deploy-admin-ui-git-url}}
    branch: {{cg-deploy-admin-ui-git-branch-production}}

- name: admin-ui-stemcell
  type: s3
  source:
    access_key_id: {{admin-ui-private-access-key-id-production}}
    bucket: {{stemcell-bucket}}
    regexp: light-bosh-stemcell-(.*)-aws-xen-hvm-ubuntu-trusty-go_agent.tgz
    region_name: {{aws-region}}
    secret_access_key: {{admin-ui-private-secret-access-key-production}}

- name: admin-ui-staging-deployment
  type: 18f-bosh-deployment
  source:
    target: {{admin-ui-staging-deployment-bosh-target}}
    username: {{admin-ui-staging-deployment-bosh-username}}
    password: {{admin-ui-staging-deployment-bosh-password}}
    deployment: {{admin-ui-staging-deployment-bosh-deployment}}
    ignore_ssl: false

- name: admin-ui-production-deployment
  type: 18f-bosh-deployment
  source:
    target: {{admin-ui-production-deployment-bosh-target}}
    username: {{admin-ui-production-deployment-bosh-username}}
    password: {{admin-ui-production-deployment-bosh-password}}
    deployment: {{admin-ui-production-deployment-bosh-deployment}}
    ignore_ssl: false

- name: pipeline-tasks
  type: git
  source:
    uri: {{pipeline-tasks-git-url}}
    branch: {{pipeline-tasks-git-branch}}

- name: slack
  type: slack-notification
  source:
    url: {{slack-webhook-url}}

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
- name: 18f-bosh-deployment
  type: docker-image
  source:
    repository: 18fgsa/bosh-deployment-resource
- name: cg-common
  type: docker-image
  source:
    repository: 18fgsa/cg-common-resource
