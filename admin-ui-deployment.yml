---
meta:
  network: cf1
  subdomain: admin
  admin_ui_uaa_client:
    id: admin-ui
    secret: (( param "specify uaa client secret" ))

name: admin-ui
director_uuid: (( param "specify director uuid" ))
releases:
- name: admin-ui
  version: latest
compilation:
  cloud_properties:
    availability_zone: (( grab terraform_outputs.az1 ))
    disk: 30000
    instance_type: c3.large
    persistent_disk: 20000
    iam_instance_profile: (( grab terraform_outputs.bosh_compilation_profile ))
  network: default
  reuse_compilation_vms: true
  workers: 5
update: (( param "specify update" ))

networks:
- name: default
  type: dynamic
  cloud_properties:
    subnet: (( grab terraform_outputs.private_subnet_az1 ))
    security_groups:
    - (( grab terraform_outputs.bosh_security_group ))

resource_pools:
- name: medium_z1
  network: (( grab meta.network ))
  stemcell: (( param "specify stemcell" ))

disk_pools:
- name: admin-ui
  disk_size: 5_120
  cloud_properties:
    encrypted: true

jobs:
- name: admin_ui
  templates:
  - name: admin_ui
    release: admin-ui
  instances: 1
  resource_pool: medium_z1
  persistent_disk_pool: admin-ui
  networks:
  - name: (( grab meta.network ))
    type: dynamic

properties:
  cc:
    srv_api_uri: (( param "specify cc api url" ))
  system_domain: (( param "specify system domain" ))
  uaa:
    url: (( param "specify uaa url" ))
    admin:
      client_secret: (( param "specify uaa client secret" ))
  admin_ui:
    cloud_controller_uri: (( grab properties.cc.srv_api_uri ))
    cloud_controller_ssl_verify_none: (( grab properties.ssl.skip_cert_verify ))
    uri: (( concat meta.subdomain "." properties.system_domain ))
    users: ~
    admins: (( param "specify admins" ))
    uaa:
      url: (( grab properties.uaa.url ))
      admin_client_secret: (( grab properties.uaa.admin.client_secret ))
      client:
        id: (( grab meta.admin_ui_uaa_client.id ))
        secret: (( grab meta.admin_ui_uaa_client.secret ))
      scopes:
        admin: ~
        user: ~

    ccdb:
      scheme: (( grab terraform_outputs.cf_rds_engine ))
      address: (( grab terraform_outputs.cf_rds_host ))
      port: (( grab terraform_outputs.cf_rds_port ))
      username: (( grab terraform_outputs.cf_rds_username ))
      password: (( grab terraform_outputs.cf_rds_password ))
      database: ccdb
    uaadb:
      scheme: (( grab terraform_outputs.cf_rds_engine ))
      address: (( grab terraform_outputs.cf_rds_host ))
      port: (( grab terraform_outputs.cf_rds_port ))
      username: (( grab terraform_outputs.cf_rds_username ))
      password: (( grab terraform_outputs.cf_rds_password ))
      database: uaadb

  ssl:
    skip_cert_verify: false
  networks:
    apps: (( grab meta.network ))
  nats:
    user: (( param "specify nats user" ))
    password: (( param "specify nats password" ))
    port: (( param "specify nats port" ))
    machines: (( param "specify nats machines" ))
    address: (( grab machines.[0] ))
